{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport VectorSource from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Point, LineString } from 'ol/geom';\nimport Feature from 'ol/Feature';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nexport default {\n  data() {\n    return {\n      map: null,\n      source: new VectorSource(),\n      points: [],\n      lineCount: 10,\n      lineSpacing: 10\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      this.map = new Map({\n        target: 'map',\n        layers: [new TileLayer({\n          source: new XYZ({\n            url: 'http://online{0-3}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1',\n            maxZoom: 18\n          })\n        }), new VectorLayer({\n          source: this.source\n        })],\n        view: new View({\n          center: fromLonLat([116.397389, 39.908722]),\n          // 北京天安门\n          zoom: 10\n        })\n      });\n      this.map.on('click', this.handleMapClick);\n    },\n    handleMapClick(evt) {\n      const coordinate = evt.coordinate;\n      this.points.push(coordinate);\n      const pointFeature = new Feature(new Point(coordinate));\n      this.source.addFeature(pointFeature);\n      if (this.points.length === 2) {\n        this.drawMainLine();\n        this.drawParallelLines();\n      }\n    },\n    drawMainLine() {\n      const line = new LineString(this.points);\n      const lineFeature = new Feature(line);\n      this.source.addFeature(lineFeature);\n    },\n    drawParallelLines() {\n      const lineCount = parseInt(this.lineCount);\n      const lineSpacing = parseFloat(this.lineSpacing);\n      const mainLine = new LineString(this.points);\n      const coordinates = mainLine.getCoordinates();\n      const dx = coordinates[1][0] - coordinates[0][0];\n      const dy = coordinates[1][1] - coordinates[0][1];\n      const length = Math.sqrt(dx * dx + dy * dy);\n      const ux = -dy / length;\n      const uy = dx / length;\n      for (let i = 1; i <= lineCount; i++) {\n        const offset = lineSpacing * i;\n        const offsetCoordinates1 = coordinates.map(coord => [coord[0] + ux * offset, coord[1] + uy * offset]);\n        const parallelLine1 = new Feature(new LineString(offsetCoordinates1));\n        this.source.addFeature(parallelLine1);\n        const offsetCoordinates2 = coordinates.map(coord => [coord[0] - ux * offset, coord[1] - uy * offset]);\n        const parallelLine2 = new Feature(new LineString(offsetCoordinates2));\n        this.source.addFeature(parallelLine2);\n      }\n    },\n    saveCoordinates() {\n      const features = this.source.getFeatures();\n      const lines = features.filter(feature => feature.getGeometry().getType() === 'LineString');\n      let csvContent = \"A_lon,A_lat,B_lon,B_lat\\n\";\n      lines.forEach(line => {\n        const coords = line.getGeometry().getCoordinates();\n        const coordA = toLonLat(coords[0]);\n        const coordB = toLonLat(coords[coords.length - 1]);\n        csvContent += `${coordA[0]},${coordA[1]},${coordB[0]},${coordB[1]}\\n`;\n      });\n      const hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvContent);\n      hiddenElement.target = '_blank';\n      hiddenElement.download = 'lines.csv';\n      hiddenElement.click();\n    }\n  }\n};","map":{"version":3,"names":["Map","View","TileLayer","XYZ","VectorSource","VectorLayer","Point","LineString","Feature","fromLonLat","toLonLat","data","map","source","points","lineCount","lineSpacing","mounted","initMap","methods","target","layers","url","maxZoom","view","center","zoom","on","handleMapClick","evt","coordinate","push","pointFeature","addFeature","length","drawMainLine","drawParallelLines","line","lineFeature","parseInt","parseFloat","mainLine","coordinates","getCoordinates","dx","dy","Math","sqrt","ux","uy","i","offset","offsetCoordinates1","coord","parallelLine1","offsetCoordinates2","parallelLine2","saveCoordinates","features","getFeatures","lines","filter","feature","getGeometry","getType","csvContent","forEach","coords","coordA","coordB","hiddenElement","document","createElement","href","encodeURI","download","click"],"sources":["D:\\APP\\my-vue-app\\src\\components\\MapComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      平行线数量：<input type=\"number\" v-model=\"lineCount\" />\r\n      平行线间隔（米）：<input type=\"number\" v-model=\"lineSpacing\" />\r\n    </div>\r\n    <button @click=\"saveCoordinates\">保存坐标</button>\r\n    <div id=\"map\" class=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport { Point, LineString } from 'ol/geom';\r\nimport Feature from 'ol/Feature';\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      source: new VectorSource(),\r\n      points: [],\r\n      lineCount: 10,\r\n      lineSpacing: 10\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = new Map({\r\n        target: 'map',\r\n        layers: [\r\n          new TileLayer({\r\n            source: new XYZ({\r\n              url: 'http://online{0-3}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1',\r\n              maxZoom: 18\r\n            })\r\n          }),\r\n          new VectorLayer({\r\n            source: this.source\r\n          })\r\n        ],\r\n        view: new View({\r\n          center: fromLonLat([116.397389, 39.908722]), // 北京天安门\r\n          zoom: 10\r\n        })\r\n      });\r\n\r\n      this.map.on('click', this.handleMapClick);\r\n    },\r\n    handleMapClick(evt) {\r\n      const coordinate = evt.coordinate;\r\n      this.points.push(coordinate);\r\n\r\n      const pointFeature = new Feature(new Point(coordinate));\r\n      this.source.addFeature(pointFeature);\r\n\r\n      if (this.points.length === 2) {\r\n        this.drawMainLine();\r\n        this.drawParallelLines();\r\n      }\r\n    },\r\n    drawMainLine() {\r\n      const line = new LineString(this.points);\r\n      const lineFeature = new Feature(line);\r\n      this.source.addFeature(lineFeature);\r\n    },\r\n    drawParallelLines() {\r\n      const lineCount = parseInt(this.lineCount);\r\n      const lineSpacing = parseFloat(this.lineSpacing);\r\n\r\n      const mainLine = new LineString(this.points);\r\n      const coordinates = mainLine.getCoordinates();\r\n\r\n      const dx = coordinates[1][0] - coordinates[0][0];\r\n      const dy = coordinates[1][1] - coordinates[0][1];\r\n      const length = Math.sqrt(dx * dx + dy * dy);\r\n      const ux = -dy / length;\r\n      const uy = dx / length;\r\n\r\n      for (let i = 1; i <= lineCount; i++) {\r\n        const offset = lineSpacing * i;\r\n\r\n        const offsetCoordinates1 = coordinates.map(coord => [coord[0] + ux * offset, coord[1] + uy * offset]);\r\n        const parallelLine1 = new Feature(new LineString(offsetCoordinates1));\r\n        this.source.addFeature(parallelLine1);\r\n\r\n        const offsetCoordinates2 = coordinates.map(coord => [coord[0] - ux * offset, coord[1] - uy * offset]);\r\n        const parallelLine2 = new Feature(new LineString(offsetCoordinates2));\r\n        this.source.addFeature(parallelLine2);\r\n      }\r\n    },\r\n    saveCoordinates() {\r\n      const features = this.source.getFeatures();\r\n      const lines = features.filter(feature => feature.getGeometry().getType() === 'LineString');\r\n\r\n      let csvContent = \"A_lon,A_lat,B_lon,B_lat\\n\";\r\n      lines.forEach(line => {\r\n        const coords = line.getGeometry().getCoordinates();\r\n        const coordA = toLonLat(coords[0]);\r\n        const coordB = toLonLat(coords[coords.length - 1]);\r\n        csvContent += `${coordA[0]},${coordA[1]},${coordB[0]},${coordB[1]}\\n`;\r\n      });\r\n\r\n      const hiddenElement = document.createElement('a');\r\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvContent);\r\n      hiddenElement.target = '_blank';\r\n      hiddenElement.download = 'lines.csv';\r\n      hiddenElement.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.map {\r\n  width: 100%;\r\n  height: 80vh;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}